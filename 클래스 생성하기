파이썬은 객체 지향 프로그래밍 언어입니다. 객체 지향 프로그래밍에서는 거의 모든 것이 객체로 표현되며, 각각의 객체는 속성(properties)과 메서드(methods)를 가집니다. 클래스(class)는 객체를 생성하기 위한 "틀" 또는 "블루프린트" 역할을 합니다.

**클래스 생성하기**
클래스를 생성하려면 `class` 키워드를 사용합니다.

```python
class MyClass:
  x = 5
```

**객체 생성하기**
이제 MyClass 클래스를 사용하여 객체를 생성할 수 있습니다.

```python
p1 = MyClass()
print(p1.x)
```

**`__init__()` 함수**
`__init__()` 함수는 클래스가 초기화될 때 항상 실행되는 함수입니다. 이 함수를 사용하여 객체의 속성에 값을 할당하거나 객체가 생성될 때 필요한 작업을 수행합니다.

```python
class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

p1 = Person("John", 36)
print(p1.name)
print(p1.age)
```

**`__str__()` 함수**
`__str__()` 함수는 클래스 객체가 문자열로 표현될 때 반환할 값을 제어합니다. 이 함수를 사용하지 않으면 객체의 기본 문자열 표현이 반환됩니다.

```python
class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

  def __str__(self):
    return f"{self.name}({self.age})"

p1 = Person("John", 36)
print(p1)
```

**객체 메서드**
객체는 메서드(methods)를 포함할 수 있습니다. 객체 내의 메서드는 객체에 속하는 함수입니다.

```python
class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

  def myfunc(self):
    print("Hello my name is " + self.name)

p1 = Person("John", 36)
p1.myfunc()
```

**`self` 매개변수**
`self` 매개변수는 클래스의 현재 인스턴스를 참조하며, 클래스에 속하는 변수에 접근하는 데 사용됩니다.

**객체 속성 수정**
객체의 속성은 다음과 같이 수정할 수 있습니다.

```python
p1.age = 40
```

**객체 속성 삭제**
객체의 속성은 `del` 키워드를 사용하여 삭제할 수 있습니다.

```python
del p1.age
```

**객체 삭제**
객체는 `del` 키워드를 사용하여 삭제할 수 있습니다.

```python
del p1
```

**`pass` 문**
클래스 정의는 비어 있을 수 없습니다. 그러나 클래스에 내용이 없는 경우 오류를 피하기 위해 `pass` 문을 넣을 수 있습니다.

```python
class Person:
  pass
```

이와 같이 파이썬에서 클래스와 객체를 생성하고 사용하는 방법에 대해 간단히 설명하였습니다.

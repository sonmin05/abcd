로컬 스코프(Local Scope)는 함수 내에서 생성된 변수가 해당 함수의 로컬 스코프에 속하며, 그 함수 내에서만 사용될 수 있습니다.

예를 들어, 아래와 같이 함수 내에서 변수를 생성하면 해당 변수는 함수 내에서만 사용할 수 있습니다.

```python
def myfunc():
  x = 300
  print(x)

myfunc()
```

위의 예제에서 변수 x는 함수 내에서 생성되었으므로 해당 함수 내에서만 사용할 수 있습니다.

함수 내에서 또 다른 함수를 정의할 수도 있습니다. 이 경우 내부 함수는 외부 함수의 로컬 변수에 접근할 수 있습니다.

```python
def myfunc():
  x = 300
  def myinnerfunc():
    print(x)
  myinnerfunc()

myfunc()
```

위의 예제에서는 내부 함수 `myinnerfunc()`에서 외부 함수 `myfunc()`의 로컬 변수 x에 접근하고 출력합니다.

글로벌 스코프(Global Scope)는 파이썬 코드의 메인 부분에서 생성된 변수로, 글로벌 변수는 전역 스코프에 속합니다. 글로벌 변수는 모든 스코프에서 사용할 수 있습니다.

```python
x = 300

def myfunc():
  print(x)

myfunc()

print(x)
```

위의 예제에서 변수 x는 함수 외부에서 생성되었으므로 전역 변수이며, 함수 내에서도 사용할 수 있습니다.

함수 내부와 외부에서 동일한 변수 이름을 사용하는 경우, 파이썬은 이를 두 개의 별개의 변수로 처리합니다. 하나는 로컬 스코프(함수 내)에서 사용되고 다른 하나는 글로벌 스코프(함수 외부)에서 사용됩니다.

```python
x = 300

def myfunc():
  x = 200
  print(x)

myfunc()

print(x)
```

위의 예제에서 함수 내에서 변수 x를 선언하면 함수 내에서의 x는 해당 함수의 로컬 변수로 취급됩니다.

글로벌 키워드(Global Keyword)는 로컬 스코프에서 글로벌 변수를 생성해야 할 때 사용됩니다. global 키워드를 사용하면 해당 변수가 글로벌 스코프에 속하게 됩니다.

```python
def myfunc():
  global x
  x = 300

myfunc()

print(x)
```

위의 예제에서 함수 내에서 global 키워드를 사용하여 변수 x를 선언하면 해당 변수는 글로벌 스코프에 속하게 됩니다.

또한, 함수 내부에서 글로벌 변수의 값을 변경하려면 global 키워드를 사용해야 합니다.

```python
x = 300

def myfunc():
  global x
  x = 200

myfunc()

print(x)
```

위의 예제에서는 함수 내에서 global 키워드를 사용하여 변수 x의 값을 변경하고 있습니다.
